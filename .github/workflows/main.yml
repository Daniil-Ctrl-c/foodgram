name: CI/CD Pipeline

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev python3-dev libjpeg-dev zlib1g-dev build-essential

    - name: Install backend dependencies
      run: |
        pip install -r backend/requirements.txt

    - name: Build frontend
      run: |
        cd frontend
        npm install
        CI='' npm run build

    - name: Build Docker images
      run: |
        docker compose -f docker-compose.yml build

    - name: Tag Docker images
      run: |
        docker tag infra-backend daniilctrlc/foodgram_backend:latest
        docker tag infra-frontend daniilctrlc/foodgram_frontend:latest
        docker tag infra-gateway daniilctrlc/foodgram_gateway:latest

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker images
      run: |
        docker push daniilctrlc/foodgram_backend:latest
        docker push daniilctrlc/foodgram_frontend:latest
        docker push daniilctrlc/foodgram_gateway:latest

    - name: Copy docker-compose.production.yml to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        source: "docker-compose.production.yml"
        target: "~/foodgram"

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          cd ~/foodgram
          docker-compose -f docker-compose.production.yml down
          docker-compose -f docker-compose.production.yml pull
          docker-compose -f docker-compose.production.yml up -d --force-recreate
          docker-compose -f docker-compose.production.yml exec -T backend python manage.py migrate
          docker-compose -f docker-compose.production.yml exec -T backend python manage.py collectstatic --noinput

    - name: Notify deployment status
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!
          üë§ –ê–≤—Ç–æ—Ä: ${{ github.actor }}
          üìú –ö–æ–º–º–∏—Ç: ${{ github.event.commits[0].message }}
          üîó https://github.com/${{ github.repository }}/commit/${{ github.sha }}
